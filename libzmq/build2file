int_libs = # Interface dependencies.
imp_libs = # Implementation dependencies.
#import imp_libs += libhello%lib{hello}

#lib{zmq}: {hxx ixx txx cxx}{**} $imp_libs $int_libs
lib{zmq}: cxx{*} wtf/cxx{*}
lib{zmq}: origin/include/hxx{*.h} origin/src/hxx{*.h}   # Extra C headers
lib{zmq}: hxx{platform}

info "src_root: $src_root"
info "src_base: $src_base"

info "out_root: $out_root"
info "out_base: $out_base"

# Build options.
#
cxx.poptions =+ "-I$out_root" "-I$out_base" "-I$src_base/origin/src/" "-I$src_base/origin/include/"

if ($cxx.target.class == 'windows')
{
  cxx.libs += ws2_32.lib rpcrt4.lib iphlpapi.lib Advapi32.lib
}

obja{*}: cxx.poptions += -DZMQ_STATIC
objs{*}: cxx.poptions += -DDLL_EXPORT

# Export options.
#
lib{zmq}:
{
  cxx.export.poptions = "-I$out_root" "-I$src_base/origin/include"
  cxx.export.libs = $int_libs
}

liba{zmq}: cxx.export.poptions += -DZMQ_STATIC
# libs{zmq}: cxx.export.poptions += -DDLL_EXPORT

# Hacked by Klaim:
# Install into the libzmq/ subdirectory of, say, /usr/include/
# recreating subdirectories.
#

origin/src/{hxx ixx txx cxx}{**} : install = false
origin/include/file{*} :
{
  install         = include/
  install.subdirs = false
}


##########
# BIG TEMPORARY HACK, DON't DO THIS AT HOME
hxx{platform}:
{
  install = false
}

if ($cc.target.class == 'windows')
{
  hxx{platform}: platform/in{platform-win}
}
if ($cc.target.class == 'linux')
{
  hxx{platform}: platform/in{platform-linux}
}
